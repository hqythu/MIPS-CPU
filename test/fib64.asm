START:
	NOP
	LI		R1	0X01
	LI		R2	0X00
	LI		R3	0X00
	LI		R4	0X00

	; R7为当前需要写入的内存地址
	LI		R7	0X86
	SLL		R7	R7	0X0

	SW 		R7	R1	0X0
	SW		R7	R2	0X1
	SW		R7	R3	0X3
	SW		R7	R4	0X4

	ADDIU	R7	0X4
	SW 		R7	R1	0X0
	SW		R7	R2	0X1
	SW		R7	R3	0X3
	SW		R7	R4	0X4

	ADDIU	R7	0X4
	LI		R0	0X2

; 外层循环的起始点，用于计算每一个Fibnacci数。
LOOP_START:
	LI		R4	0X0		; R4用于内层循环的计数
	LI		R5	0X0		; R5用于记录进位

; 内层循环，每次循环四次，用于计算结果的四个字（即64位）
INER_LOOP_START:
	MOVE	R6	R7
	ADDIU	R6	0XFC
	LW		R6	R2	0X0
	ADDIU	R6	0XFC
	LW		R6	R1	0X0
	ADDU	R1	R2	R3
	ADDU	R3	R5	R3
	LI		R5	0X0
	SLTU	R3	R1
	BTEQZ	NO_CARRY
	NOP
	LI		R5	0X1
NO_CARRY:
	SW		R7	R3	0X0
	ADDIU	R7	0X1
	ADDIU	R4	0X1
	CMPI	R4	0X4
	BTNEZ	INER_LOOP_START
	NOP

	ADDIU	R0	0X1
	CMPI	R0	0X32	; 计算到第50个
	BTNEZ	LOOP_START
	NOP
